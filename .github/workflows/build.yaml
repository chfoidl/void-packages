name: Check build

on:
  pull_request:
  push:
    branches:
      - master

env:
  REGISTRY : ghcr.io
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Lint changed templates.
  xlint:
    name: Lint templates
    runs-on: ubuntu-latest

    env:
      PATH: '/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
      XLINT: '1'
      LICENSE_LIST: common/travis/license.lst

    steps:
      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1
      - run: common/travis/changed_templates.sh
      - run: common/travis/fetch-xbps.sh
      - run: common/travis/fetch-xtools.sh
      - run: common/travis/xlint.sh

  # Build changed packages.
  build:
    name: Build packages
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.title, '[ci skip]') && !contains(github.event.pull_request.body, '[ci skip]')"

    container:
      image: 'ghcr.io/void-linux/xbps-src-masterdir:20230425RC01-${{ matrix.config.bootstrap }}'
      env:
        PATH: '/usr/libexec/chroot-git:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/sbin:/usr/local/bin:/tmp/bin'
        ARCH: '${{ matrix.config.arch }}'
        BOOTSTRAP: '${{ matrix.config.bootstrap }}'
        TEST: '${{ matrix.config.test }}'
        HOSTREPO: /hostrepo

    strategy:
      fail-fast: false
      matrix:
        config:
          - { arch: x86_64, bootstrap: x86_64, test: 1 }
          # - { arch: i686, bootstrap: i686, test: 1 }
          # - { arch: aarch64, bootstrap: x86_64, test: 0 }
          # - { arch: armv7l, bootstrap: x86_64, test: 0 }
          - { arch: x86_64-musl, bootstrap: x86_64-musl, test: 1 }
          # - { arch: armv6l-musl, bootstrap: x86_64-musl, test: 0 }
          # - { arch: aarch64-musl, bootstrap: x86_64-musl, test: 0 }

    steps:
      - name: Prepare container
        run: |
          # switch to repo-ci mirror
          mkdir -p /etc/xbps.d && cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
          sed -i 's|repo-default|repo-ci|g' /etc/xbps.d/*-repository-*.conf
          # Sync and upgrade once, assume error comes from xbps update
          xbps-install -Syu || xbps-install -yu xbps
          # Upgrade again (in case there was a xbps update)
          xbps-install -yu

      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1
      - name: Create hostrepo and prepare masterdir
        run: |
         ln -s "$(pwd)" /hostrepo &&
         common/travis/set_mirror.sh &&
         common/travis/prepare.sh &&
         common/travis/fetch-xtools.sh
      - run: common/travis/changed_templates.sh

      - name: Build and check packages
        run: |
          (
          here="$(pwd)"
          cd /
          "$here/common/travis/build.sh" "$BOOTSTRAP" "$ARCH" "$TEST"
          )

      - name: Show files
        run: |
          (
          here="$(pwd)"
          cd /
          "$here/common/travis/show_files.sh" "$BOOTSTRAP" "$ARCH"
          )

      - name: Compare to previous
        run: |
          (
          here="$(pwd)"
          cd /
          "$here/common/travis/xpkgdiff.sh" "$BOOTSTRAP" "$ARCH"
          )

      - name: Check file conflicts
        if: matrix.config.arch == 'x86_64' # the arch indexed in xlocate
        run: |
          if [ -s /tmp/templates ]; then
              xlocate -S &&
              common/scripts/lint-conflicts $HOME/hostdir/binpkgs
          fi

      - name: Verify repository state
        run: |
          (
          here="$(pwd)"
          cd /
          "$here/common/travis/check-install.sh" "$BOOTSTRAP" "$ARCH"
          )

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs:
      - build
    if: needs.build.result == 'success'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Clone and checkout
        uses: classabbyamp/treeless-checkout-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
